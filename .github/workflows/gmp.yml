name: Faster configuration (GMP)

on:
  push:
    branches:
      - '**'         # all branches
  pull_request:
    branches:
      - '**'         # all branches

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest - MSVC",
            artifact: "windows-msvc.tar.xz",
            os: windows-latest,
            cc: "cl",
          }
          - {
            name: "Windows Latest - MinGW",
            artifact: "windows-mingw.tar.xz",
            os: windows-latest,
            cc: "gcc"
          }
          - {
            name: "Ubuntu Latest - GCC",
            artifact: "linux-gcc.tar.xz",
            os: ubuntu-latest,
            cc: "gcc",
          }
          - {
            name: "Ubuntu Latest - Clang",
            artifact: "linux-clang.tar.xz",
            os: ubuntu-latest,
            cc: "clang",
          }
          - {
            name: "MacOS Latest",
            os: macos-latest,
            cc: "clang",
          }
    steps:
      - uses: actions/checkout@v2

      - name: Set Windows enviroment
        if: ${{ (runner.os == 'Windows') && (matrix.config.cc == 'cl') }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Windows package manager
        if: ${{ (runner.os == 'Windows') && (matrix.config.cc == 'cl') }}
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '6c9cda1635859571de5c964bbacdece824045305'

      - name: Install Windows Dependencies
        if: ${{ (runner.os == 'Windows') && (matrix.config.cc == 'cl') }}
        run: |
          $VCPKG_ROOT/vcpkg integrate install
          $VCPKG_ROOT/vcpkg install gmp
        shell: powershell

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: sudo apt install libgmp-dev

      - name: Install MacOS Dependencies
        if: runner.os == 'MacOS'
        run: brew install gmp

      - name: Set MinGW enviroment
        if: ${{ (runner.os == 'Windows') && (matrix.config.cc == 'gcc') }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            git
            base-devel
            gcc
            cmake
            gmp
          update: true

      - name: Run CMake (Win)
        if: ${{ (runner.os == 'Windows') && (matrix.config.cc == 'cl') }}
        shell: powershell
        run: |
          mkdir build
          cd build
          cmake -DSEED= -DBENCH=0 -DARITH=gmp -G "NMake Makefiles" ..

      - name: Run CMake (MingW)
        if: ${{ (runner.os == 'Windows') && (matrix.config.cc == 'gcc') }}
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -DSEED= -DBENCH=0 -DARITH=gmp -G "MinGW Makefiles" ..

      - name: Run CMake (standard)
        if: ${{ !(runner.os == 'Windows') }}
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DSEED= -DBENCH=0 -DARITH=gmp ..

      - name: CMake Build
        run: cmake --build build

      - name: CMake Test
        run: |
          cd build
          ctest --verbose .
